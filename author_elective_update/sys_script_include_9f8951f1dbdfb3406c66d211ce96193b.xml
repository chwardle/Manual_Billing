<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="DELETE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_soud2_manual_bil.ManualBilling</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>This also deterimines if a user can request approval. It requires valid approvers for each detail record, and a valid ELCID for each detail record.&#13;
This will get the Rate Code Description, Revenue Unit and Rate Value.&#13;
</description>
        <name>ManualBilling</name>
        <script><![CDATA[var ManualBilling = Class.create();
ManualBilling.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    //type: 'ManualBilling',
    checkAdjustmentRecord: function(sysid) {
        var ans = true;
	
        //This will only allow a user to request approval if all details have approvers.
        var qryA = 'u_billing_adjustment=' + sysid + '^active=true^u_ru_approver.u_approversISEMPTY'; //Query approvers
        var gaMBA = new GlideAggregate('x_soud2_manual_bil_adjustment_details'); //Manual Billing Approvers
        gaMBA.addEncodedQuery(qryA);
        gaMBA.addAggregate('COUNT', 'u_billing_adjustment');
        gaMBA.query();
       
        if (gaMBA.next()) {
            if (gaMBA.getAggregate('COUNT', 'u_billing_adjustment') > 0) {
                ans = false;
                gs.addErrorMessage('You have detail records with no approvers.');
            }
        }       
		//This will check for any invalid ELCID's.
        var qryE = 'u_billing_adjustment=' + sysid + '^active=true^u_elcid.u_elcidISEMPTY'; //Query ELCID's
        var gaMBE = new GlideAggregate('x_soud2_manual_bil_adjustment_details'); //Manual Billing ELCID's
        gaMBE.addEncodedQuery(qryE);
        gaMBE.addAggregate('COUNT', 'u_billing_adjustment');
        gaMBE.query();

        if (gaMBE.next()) {
            if (gaMBE.getAggregate('COUNT', 'u_billing_adjustment') > 0) {
                ans = false;
				gs.addErrorMessage('There are invalid ELCIDs in the Detail records');
            }
        }
        return ans;
    },

    getAgency: function() {
        var userRec = this.getParameter('sysparm_user');
        var gr = new GlideRecord('sys_user');
        if (gr.get(userRec)) {
            var response = [];
            ans = gr.company + ',' + gr.company.name;
            return ans;
        }
        return 'failed';
    },

    getRateInformation: function() {
        var revenueString = [];
        var rateRot = this.getParameter('sysparm_revenue');
        var gr = new GlideRecord('u_rate_code');
        if (gr.get(rateRot)) {
            revenueString = gr.u_revenue_unit;
            revenueString = revenueString + ',' + gr.u_revenue_unit.u_dept_unit;
            revenueString = revenueString + ',' + gr.u_code;
            revenueString = revenueString + ',' + gr.u_rate_value;

            var qry = 'revenue_unit=' + gr.u_revenue_unit;
            var grRU = new GlideRecord('x_soud2_manual_bil_revenue_unit_approvers');
            grRU.addEncodedQuery(qry);
            grRU.query();

            if (grRU.next()) {
                revenueString = revenueString + ',' + grRU.getValue('sys_id') + ',' + grRU.getDisplayValue();
            }
            return revenueString;
        }
        return 'failed';
    },
    type: 'ManualBilling'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>dyearsley</sys_created_by>
        <sys_created_on>2019-08-16 21:12:36</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>9f8951f1dbdfb3406c66d211ce96193b</sys_id>
        <sys_mod_count>216</sys_mod_count>
        <sys_name>ManualBilling</sys_name>
        <sys_package display_value="Manual Billing" source="x_soud2_manual_bil">a369cbe31bf7e3005ae0c91e1e4bcb51</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Manual Billing">a369cbe31bf7e3005ae0c91e1e4bcb51</sys_scope>
        <sys_update_name>sys_script_include_9f8951f1dbdfb3406c66d211ce96193b</sys_update_name>
        <sys_updated_by>dyearsley</sys_updated_by>
        <sys_updated_on>2021-03-25 19:33:59</sys_updated_on>
    </sys_script_include>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Manual Billing">a369cbe31bf7e3005ae0c91e1e4bcb51</application>
        <comments/>
        <file_path/>
        <instance_id>e1981d624f8a5604152a99701310c715</instance_id>
        <instance_name>utahdev1</instance_name>
        <name>sys_script_include_9f8951f1dbdfb3406c66d211ce96193b</name>
        <order/>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_soud2_manual_bil.ManualBilling&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;true&lt;/client_callable&gt;&lt;description&gt;This also deterimines if a user can request approval. It requires valid approvers for each detail record, and a valid ELCID for each detail record.&amp;#13;
This will get the Rate Code Description, Revenue Unit and Rate Value.&amp;#13;
&lt;/description&gt;&lt;name&gt;ManualBilling&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var ManualBilling = Class.create();
ManualBilling.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    //type: 'ManualBilling',
    checkAdjustmentRecord: function(sysid) {
        var ans = true;
	
        //This will only allow a user to request approval if all details have approvers.
        var qryA = 'u_billing_adjustment=' + sysid + '^active=true^u_ru_approver.u_approversISEMPTY'; //Query approvers
        var gaMBA = new GlideAggregate('x_soud2_manual_bil_adjustment_details'); //Manual Billing Approvers
        gaMBA.addEncodedQuery(qryA);
        gaMBA.addAggregate('COUNT', 'u_billing_adjustment');
        gaMBA.query();
       
        if (gaMBA.next()) {
            if (gaMBA.getAggregate('COUNT', 'u_billing_adjustment') &gt; 0) {
                ans = false;
                gs.addErrorMessage('You have detail records with no approvers.');
            }
        }       
		//This will check for any invalid ELCID's.
        var qryE = 'u_billing_adjustment=' + sysid + '^active=true^u_elcid.u_elcidISEMPTY'; //Query ELCID's
        var gaMBE = new GlideAggregate('x_soud2_manual_bil_adjustment_details'); //Manual Billing ELCID's
        gaMBE.addEncodedQuery(qryE);
        gaMBE.addAggregate('COUNT', 'u_billing_adjustment');
        gaMBE.query();

        if (gaMBE.next()) {
            if (gaMBE.getAggregate('COUNT', 'u_billing_adjustment') &gt; 0) {
                ans = false;
				gs.addErrorMessage('There are invalid ELCIDs in the Detail records');
            }
        }
        return ans;
    },

    getAgency: function() {
        var userRec = this.getParameter('sysparm_user');
        var gr = new GlideRecord('sys_user');
        if (gr.get(userRec)) {
            var response = [];
            ans = gr.company + ',' + gr.company.name;
            return ans;
        }
        return 'failed';
    },

    getRateInformation: function() {
        var revenueString = [];
        var rateRot = this.getParameter('sysparm_revenue');
        var gr = new GlideRecord('u_rate_code');
        if (gr.get(rateRot)) {
            revenueString = gr.u_revenue_unit;
            revenueString = revenueString + ',' + gr.u_revenue_unit.u_dept_unit;
            revenueString = revenueString + ',' + gr.u_code;
            revenueString = revenueString + ',' + gr.u_rate_value;

            var qry = 'revenue_unit=' + gr.u_revenue_unit;
            var grRU = new GlideRecord('x_soud2_manual_bil_revenue_unit_approvers');
            grRU.addEncodedQuery(qry);
            grRU.query();

            if (grRU.next()) {
                revenueString = revenueString + ',' + grRU.getValue('sys_id') + ',' + grRU.getDisplayValue();
            }
            return revenueString;
        }
        return 'failed';
    },
    type: 'ManualBilling'
});]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;dyearsley&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-08-16 21:12:36&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;9f8951f1dbdfb3406c66d211ce96193b&lt;/sys_id&gt;&lt;sys_mod_count&gt;216&lt;/sys_mod_count&gt;&lt;sys_name&gt;ManualBilling&lt;/sys_name&gt;&lt;sys_package display_value="Manual Billing" source="x_soud2_manual_bil"&gt;a369cbe31bf7e3005ae0c91e1e4bcb51&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Manual Billing"&gt;a369cbe31bf7e3005ae0c91e1e4bcb51&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_9f8951f1dbdfb3406c66d211ce96193b&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;dyearsley&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-03-25 19:33:59&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
        <payload_hash>1405921568</payload_hash>
        <record_name>ManualBilling</record_name>
        <reverted_from/>
        <source>f1a8f76e1b8bec54f22d0d84604bcb37</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>dyearsley</sys_created_by>
        <sys_created_on>2021-03-25 19:33:59</sys_created_on>
        <sys_id>4b5004361b0fec54f22d0d84604bcb44</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>1786ae115520000001</sys_recorded_at>
        <sys_updated_by>dyearsley</sys_updated_by>
        <sys_updated_on>2021-03-25 19:33:59</sys_updated_on>
        <type>Script Include</type>
        <update_guid>435004367c0fec545d131f985d98dd44</update_guid>
        <update_guid_history>435004367c0fec545d131f985d98dd44:1405921568,73ed3b2efecbec540df8061d40b52e57:646211260,154cbba66ecbec54c76959e5a1fb97cf:-1692982336,e2efa762ea4bec54d769c0930a0f158a:2047683483,417797ee3607ec546f2bcae2c85fb500:1613074820,406757ae2707ec541459fbac479ca28e:-1123172853,9427d72e5f07ec54c0ddf5b20437a132:-1428722087,58f6972ea107ec54023bf1c897a01ff3:-262708568,859617eae107ec5478d864803abbcd5c:-1451547052,eb6617aaf807ec54244185709437488f:-1870112546,97169baae607ec542a37829c08624a19:-549512367,0fd51f2a3207ec5405610af2ef24d6ca:-459359561,83a55f2a4107ec549d5fc44d4fd1bf4c:-1261224649,7525d32a7e07ec54624b05b6992c3830:663251145,e415572aaf07ec54b6c2f3bce69e5b31:1152032883,e6f4132a3407ec54447775ae775d23c2:-2076862381,cbd4132a5e07ec54fcf498848113a904:-1357554067,b6c497e66f07ec54a2ce2a3cd15e5bb5:-1950756333,ca949fa63007ec549e75a8c671f1a2cc:-1502154253,60649b66cf07ec544c626f41da51a2e6:224747963,7f049f261707ec54ca2f6cbec9f2f74e:-1675665584,dfc353261c07ec5459547cbac2fb00d1:295892480,6cb35fa22d07ec54276573983e4ad3c7:254438391,4f535fa2de07ec5413afbd376b8070be:-1802556619,e9ec0b226ec3ec5453d98ede52a11e8e:1660539949,3c7b4fea2983ec54f19355460adcf175:89573997,a51b4feac483ec54e026a6f24629ab6d:-533178158,fe6a876a8a83ec543ff9227564c2cc61:895541668,710a4b2af183ec54d0ffaeece67b87c9:-1596548396,0be9472ac383ec548f551a6b6ebc7429:-2140988037,e0b90be20b83ec540ae033388e3b1e6f:1236203172,e8805116607f5010bb0228c95ac43f4b:-1597635333,58e73490175aac10401b10784fe6609e:0,b0a7bc10595aac10177bdc89c6eb6282:124323847,e8805116607f5010bb0228c95ac43f4b:-1597635333,e0805116db7f5010d5aeebd8f3564a48:1947862820,28bb6dea10b71450fe445be1e006332e:1947862820</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>dyearsley</sys_created_by>
        <sys_created_on>2021-03-25 19:40:38</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_db_object display_value="" name="sys_script_include">sys_script_include</sys_db_object>
        <sys_id>0dd521de98464194a5b8ebe466490290</sys_id>
        <sys_metadata>9f8951f1dbdfb3406c66d211ce96193b</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ManualBilling</sys_name>
        <sys_package display_value="Manual Billing" source="x_soud2_manual_bil">a369cbe31bf7e3005ae0c91e1e4bcb51</sys_package>
        <sys_parent/>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Manual Billing">a369cbe31bf7e3005ae0c91e1e4bcb51</sys_scope>
        <sys_scope_delete display_value="">279a16034fba4d2190cc50f42cc1ed81</sys_scope_delete>
        <sys_update_name>sys_script_include_9f8951f1dbdfb3406c66d211ce96193b</sys_update_name>
        <sys_update_version display_value="sys_script_include_9f8951f1dbdfb3406c66d211ce96193b">4b5004361b0fec54f22d0d84604bcb44</sys_update_version>
        <sys_updated_by>dyearsley</sys_updated_by>
        <sys_updated_on>2021-03-25 19:40:38</sys_updated_on>
    </sys_metadata_delete>
</record_update>
