<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_soud2_manual_bil.ManualBilling</api_name>
        <client_callable>true</client_callable>
        <description>This will get the Rate Code Description, Revenue Unit and Rate Value</description>
        <name>ManualBilling</name>
        <script><![CDATA[var ManualBilling = Class.create();
ManualBilling.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	
	//type: 'ManualBilling',
	checkAdjustmentRecord: function(sysid,approval){
		var ans = false;
		if  (approval == 'not requested') {
			var gr = new GlideRecord('x_soud2_manual_bil_adjustment_details');
			gr.addQuery('u_billing_adjustment', sysid);
			gr.setLimit(1);
			gr.query();
			if (gr.hasNext()) {
				ans = true;
			}
			return ans;
		}
	},
	
	checeRevenueApprovers: function(){
		var revenue = this.getParameter('sysparm_revenue');
		var query = 'revenue_unit=' + revenue + '^approverISNOTEMPTY';
		var gr = new GlideRecord('x_soud2_manual_bil_revenue_unit_approvers');
		gr.addEncodedQuery(query);
		gr.setLimit(1);
		gr.query();
		
		if (gr.hasNext()) {
			return 'true';
		} else {
			return 'false';
		}
	},
	
	getAgency: function() {
		var userRec = this.getParameter('sysparm_user');
		var gr = new GlideRecord('sys_user');
		if (gr.get(userRec)) {
			var response = [];
			ans = gr.company + ',' + gr.company.name;
			//gs.logError('response: ' + ans);
			return ans;
		}
		return 'failed';
	},
	
	getRateInformation: function() {
		var revenueString = [];
		var rateRot = this.getParameter('sysparm_revenue');
		var gr = new GlideRecord('u_rate_code');
		if (gr.get(rateRot)) {
			revenueString = gr.u_revenue_unit;
			revenueString = revenueString + ',' + gr.u_revenue_unit.u_dept_unit;
			revenueString = revenueString + ',' + gr.u_code;
			revenueString = revenueString + ',' + gr.u_rate_value;
			
			return revenueString;
		}
		return revenueString;
	},
	type: 'ManualBilling'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>dyearsley</sys_created_by>
        <sys_created_on>2019-08-16 21:12:36</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>9f8951f1dbdfb3406c66d211ce96193b</sys_id>
        <sys_mod_count>94</sys_mod_count>
        <sys_name>ManualBilling</sys_name>
        <sys_package display_value="Manual Billing" source="x_soud2_manual_bil">a369cbe31bf7e3005ae0c91e1e4bcb51</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Manual Billing">a369cbe31bf7e3005ae0c91e1e4bcb51</sys_scope>
        <sys_update_name>sys_script_include_9f8951f1dbdfb3406c66d211ce96193b</sys_update_name>
        <sys_updated_by>dyearsley</sys_updated_by>
        <sys_updated_on>2019-10-22 17:07:10</sys_updated_on>
    </sys_script_include>
</record_update>
